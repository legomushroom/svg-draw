// Generated by CoffeeScript 1.6.3
(function(){var e={}.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};define("path",["jquery","helpers","ProtoClass","line","underscore","hammer"],function(e,n,r,i,s,o){var u,a;u=function(e){function r(){a=r.__super__.constructor.apply(this,arguments);return a}t(r,e);r.prototype.type="path";r.prototype.initialize=function(e){this.o=e!=null?e:{};this.set("id",n.genHash());this.o.coords&&this.set({startIJ:App.grid.toIJ(this.o.coords),endIJ:App.grid.toIJ(this.o.coords)});this.on("change:startIJ",s.bind(this.onChange,this));return this.on("change:endIJ",s.bind(this.onChange,this))};r.prototype.onChange=function(){this.set("oldIntersects",n.cloneObj(this.get("intersects")));return this.render()};r.prototype.render=function(e){e==null&&(e=!1);this.removeFromGrid();this.recalcPath();this.makeSvgPath();return App.grid.refreshGrid()};r.prototype.pushPoint=function(e,t){var n,r,i;i=App.grid.fromIJ(e);n=App.grid.atIJ(e);n.holders==null&&(n.holders={});n.holders[this.get("id")]=this;r={x:i.x,y:i.y,curve:null,i:t};this.points.push(r);return this.points};r.prototype.recalcPath=function(){var e,t,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H,B,j,F,I,q,R,U,z;n.timeIn("path recalc");s=this.makeGlimps();this.points=[];l=this.get("startIJ");i=this.get("endIJ");r=s.direction;this.direction=r;this.set("direction",r);console.log(this);t=Math.ceil(s.base)>l[r]?1:-1;a=r==="i"?App.grid.grid.getNodeAt(l[r]+t,l.j):App.grid.grid.getNodeAt(l.i,l[r]+t);if(!a.block)for(o=d=T=l[r],H=Math.ceil(s.base);T<=H?d<=H:d>=H;o=T<=H?++d:--d){r==="i"?u={i:o,j:l.j}:u={i:l.i,j:o};this.pushPoint(u,o)}else if(r==="i"){c=l.j-s.startBlock.get("startIJ").j;h=s.startBlock.get("endIJ").j-l.j;p=i.j-l.j;f=c+p<h-p?"startIJ":"endIJ";t=f==="startIJ"?1:0;for(o=v=j=l.j,F=s.startBlock.get(f).j-t;j<=F?v<=F:v>=F;o=j<=F?++v:--v){u={i:l.i,j:o};this.pushPoint(u,o)}for(o=m=I=l.i,q=Math.ceil(s.base);I<=q?m<=q:m>=q;o=I<=q?++m:--m){u={i:o,j:s.startBlock.get(f).j-t};this.pushPoint(u,o)}}else{f="startIJ";t=f==="startIJ"?1:0;for(o=g=R=l.i,U=s.startBlock.get(f).i-t;R<=U?g<=U:g>=U;o=R<=U?++g:--g){u={i:o,j:l.j};this.pushPoint(u,o)}for(o=y=z=l.j,N=Math.ceil(s.base);z<=N?y<=N:y>=N;o=z<=N?++y:--y){u={i:s.startBlock.get(f).i-t,j:o};this.pushPoint(u,o)}}t=Math.ceil(s.base)>l[r]?-1:1;a=r==="i"?App.grid.grid.getNodeAt(i[r]+t,i.j):App.grid.grid.getNodeAt(i.i,i[r]+t);if(!a.block)for(o=b=C=Math.ceil(s.base),k=i[r];C<=k?b<=k:b>=k;o=C<=k?++b:--b){r==="i"?u={i:o,j:i.j}:u={i:i.i,j:o};this.pushPoint(u,o)}else if(r==="i"){e=s.endBlock||App.currBlock;if(e){c=i.j-e.get("startIJ").j;h=e.get("endIJ").j-i.j;p=i.j-l.j;f=c+p>h-p?"startIJ":"endIJ";t=f==="startIJ"?1:0;for(o=w=L=Math.ceil(s.base),A=i.i;L<=A?w<=A:w>=A;o=L<=A?++w:--w){u={i:o,j:e.get(f).j-t};this.pushPoint(u,o)}for(o=E=O=e.get(f).j-t,M=i.j;O<=M?E<=M:E>=M;o=O<=M?++E:--E){u={i:i.i,j:o};this.pushPoint(u,o)}}}else{e=s.endBlock||App.currBlock;if(e){f="startIJ";t=f==="startIJ"?1:0;for(o=S=_=Math.ceil(s.base),D=e.get(f).j-t;_<=D?S<=D:S>=D;o=_<=D?++S:--S){u={i:e.get(f).i-t,j:o};this.pushPoint(u,o)}for(o=x=P=e.get(f).i-t,B=i.i;P<=B?x<=B:x>=B;o=P<=B?++x:--x){u={i:o,j:e.get(f).j-t};this.pushPoint(u,o)}}}this.set("points",this.points);this.calcPolar();n.timeOut("path recalc");return this};r.prototype.makeGlimps=function(){var e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v;c=this.get("startIJ");s=this.get("endIJ");a=this.get("connectedStart");n=this.get("connectedEnd");l=a?a.get("w")/2:0;f=a?a.get("h")/2:0;i=n?n.get("w")/2:0;r=n?n.get("h")/2:0;if(c.i<s.i){t=c.i+l;p=s.i-i-t;h=t+p/2}else{u=s.i+i;p=c.i-l-u;h=u+p/2}if(c.j<s.j){t=c.j+f;v=s.j-r-t;d=t+v/2}else{u=s.j+r;v=c.j-f-u;d=u+v/2}e=p>=v?"i":"j";return o={direction:e,base:e==="i"?h:d,startBlock:a,endBlock:n}};r.prototype.calcPolar=function(){var e,t,n;n=this.get("points");e=n[0];t=n[n.length-1];this.set("xPolar",e.x<t.x?"plus":"minus");return this.set("yPolar",e.y<t.y?"plus":"minus")};r.prototype.repaintIntersects=function(e){var t,n;for(t in e){n=e[t];if(n.id===this.id)continue;n.render([n.id])}return this.set("oldIntersects",{})};r.prototype.detectCollisions=function(){var e,t,n,r,i,o,u,a,f,l=this;this.set("intersects",{});a=this.get("points");f=[];for(o=0,u=a.length;o<u;o++){i=a[o];e=this.directionAt(i);n=App.grid.at(i);if(s.size(n.holders)>1){s.chain(n.holders).where({type:"path"}).each(function(e){return l.set("intersects",l.get("intersects")[e.id]=e)});f.push(function(){var n,s;n=this.get("intersects");s=[];for(t in n){r=n[t];if(r.get("id"===this.get("id")))continue;e!==r.directionAt(i)&&r.directionAt(i)!=="corner"&&e!=="corner"?s.push(i.curve=""+e):s.push(void 0)}return s}.call(this))}else f.push(void 0)}return f};r.prototype.directionAt=function(e){var t,n,r,i,o,u,a;r=this.get("points");n=s.where(r,{x:e.x,y:e.y})[0];if(!n)return"corner";((i=r[n.i-1])!=null?i.x:void 0)===n.x&&((o=r[n.i+1])!=null?o.x:void 0)===n.x?t="vertical":((u=r[n.i-1])!=null?u.y:void 0)===n.y&&((a=r[n.i+1])!=null?a.y:void 0)===n.y?t="horizontal":t="corner";return t};r.prototype.makeSvgPath=function(){var e=this;if(this.line==null){this.line=new i({path:this});return o(this.line.line).on("touch",function(){return console.log("touch")})}return this.line.resetPoints(this.get("points"))};r.prototype.removeFromGrid=function(){var e,t,n,r,i,s;n=this.get("points");if(n==null)return;s=[];for(r=0,i=n.length;r<i;r++){t=n[r];e=App.grid.at(t);s.push(delete e.holders[this.get("id")])}return s};r.prototype.removeIfEmpty=function(){if(this.isEmpty()){this.line.remove();this.removeFromGrid()}return App.grid.refreshGrid()};r.prototype.isEmpty=function(){var e;return((e=this.line)!=null?e.get("points").length:void 0)<=2};return r}(r);return u})}).call(this);