// Generated by CoffeeScript 1.6.2
(function() {
  require.config({
    paths: {
      jquery: 'lib/jquery-2.0.1',
      underscore: 'lib/lodash.underscore',
      hammer: 'lib/hammer',
      tween: 'lib/tween.min',
      two: 'lib/two'
    },
    shim: {
      "two": {
        exports: "Two"
      }
    }
  });

  define('main', ['helpers', 'hammer', 'jquery', 'two'], function(_, hammer, $, Two) {
    var Application;

    Application = (function() {
      function Application() {
        this.initVars();
        this.listenToTouches();
      }

      Application.prototype.initVars = function() {
        this.two = new Two({
          fullscreen: true,
          autostart: true
        }).appendTo($('#js-main')[0]);
        return this.$svgCanvas = $(this.two.renderer.domElement);
      };

      Application.prototype.listenToTouches = function() {
        var v, _i, _len, _ref,
          _this = this;

        this.line = this.two.makeLine(0, 0, 0, 0);
        this.line.noFill().stroke = "#00DFFC";
        this.line.noFill().linewidth = 2;
        _ref = this.line.vertices;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          v = _ref[_i];
          v.addSelf(this.line.translation);
        }
        this.line.translation.clear();
        return hammer(this.$svgCanvas[0]).on('drag', function(e) {
          return _this.line.vertices.push(_this.makePoint(_.getNearestCellCenter({
            x: e.gesture.center.pageX,
            y: e.gesture.center.pageY
          })));
        });
      };

      Application.prototype.makePoint = function(x, y) {
        var v;

        if (arguments.length <= 1) {
          y = x.y;
          x = x.x;
        }
        v = new Two.Vector(x, y);
        v.position = new Two.Vector().copy(v);
        return v;
      };

      return Application;

    })();
    return new Application;
  });

}).call(this);
