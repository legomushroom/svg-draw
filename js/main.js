// Generated by CoffeeScript 1.6.2
(function() {
  require.config({
    paths: {
      jquery: 'lib/jquery-2.0.1',
      underscore: 'lib/lodash.underscore',
      hammer: 'lib/hammer',
      tween: 'lib/tween.min',
      two: 'lib/two',
      path: 'modules/path'
    },
    shim: {
      "two": {
        exports: "Two"
      }
    }
  });

  define('main', ['helpers', 'hammer', 'jquery', 'two', 'path'], function(helpers, hammer, $, Two, Path) {
    'use strict';
    var App;

    App = (function() {
      function App() {
        this.initVars();
        this.listenToTouches();
      }

      App.prototype.initVars = function() {
        this.two = new Two({
          fullscreen: true,
          autostart: true
        }).appendTo($('#js-main')[0]);
        this.$svgCanvas = $(this.two.renderer.domElement);
        this.helpers = helpers;
        this.paths = [];
        return this.objects = [];
      };

      App.prototype.listenToTouches = function() {
        var _this = this;

        this.currPath = null;
        hammer(this.$svgCanvas[0]).on('touch', function(e) {
          _this.currPath = new Path({
            coords: _this.helpers.getNearestCellCenter({
              x: e.gesture.center.pageX,
              y: e.gesture.center.pageY
            })
          });
          return _this.paths.push(_this.currPath);
        });
        hammer(this.$svgCanvas[0]).on('release', function(e) {
          _this.currPath.removeIfEmpty();
          return _this.currPath.simplify();
        });
        return hammer(this.$svgCanvas[0]).on('drag', function(e) {
          return _this.currPath.addPoint(_this.helpers.to2Coordinates(e));
        });
      };

      return App;

    })();
    return window.App = new App;
  });

}).call(this);
